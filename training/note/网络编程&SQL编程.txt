# 网络编程&SQL编程

## 网络编程入门

net包是网络相关的核心包, net里面包含了http、rpc等关键包
net包里最重要的两个调用
    Listen(network, addr string) 监听某个端口, 等待客户端连接
    Dial(network, addr string) 拨号, 连接上某个服务端

处理连接基本上就是在一个for循环内
    ① 先读数据: 读数据就是根据上层协议来决定怎么读, 例如, 简单的RPC协议一般分成两段读, 先读头部, 根据头部得知body有多长, 再把剩下的数据读出来
    ② 处理数据
    ③ 即便处理数据出错了, 也要返回一个错误给客户端, 不然客户端不知道你处理出错了
在读写数据的时候, 都可能遇到错误, 一般来说代表连接已经关闭的是 EOF, ErrUnexpectedEOF, ErrClosed
    建议只要是出错了就直接关闭, 这样对客户端和服务端代码都简单

代码演示 - 创建简单的TCP服务器

## 连接池

创建一个连接池是很昂贵的 ①要发起系统调用 ②TCP要完成三次握手 ③高并发的情况下, 可能耗尽文件描述符
连接池就是为了复用这些创建好的连接

开源案例 https://github.com/silenceper/pool
    InitialCap: 资源池初始连接大小. 过小, 启动的时候可能大部分请求都需要创建连接, 过大则浪费
    MaxIdle: 最大空闲连接数. 过大浪费, 过小无法应对突发流量
    MaxCap: 最大连接数
Get需要考虑: 有空闲连接, 直接返回; 否则, 没超过最大连接数, 直接创建新的; 否则, 阻塞调用方
Put需要考虑: 有Get请求被阻塞, 把连接丢进去; 否则, 没超过最大连接数, 放到空闲列表; 否则, 直接关闭

连接池运作图解
sql.DB中的连接池管理

面试要点
几个参数的含义: 初始连接, 最大空闲连接, 最大连接数
连接池的运作原理: 拿连接会发生什么, 放回去又会发生什么
sql.DB解决过期连接的懒惰策略, 可以类比其他如本地缓存的

## SQL编程

初始化DB
Open方法:
    driver就是驱动的名字, 例如mysql, sqlite3
    dns: 简单理解就是数据库链接信息
    常见错误: 忘记匿名引入driver包
OpenDB方法
    一般用于接入一些自定义的驱动, 例如说将分库分表做成一个驱动

增删改查入门
增删改 ①Exec或ExecContext ②可以用ExecContext来控制超时 ③同时检查error和sql.Result
查询 ①QueryRow和QueryRowContext查询单行数据 ②Query和QueryContext查询多行数据
注意: 一般的sql都是用?作为参数占位符, 不要把参数拼接进去sql本身, 容易引起注入

Row和Rows
Row可以理解为只有一行的Rows, 而且是必须要有一行. 没有的话, 在调用Row的Scan的时候会返回sql.ErrNoRows
不要使用RawBytes, RawBytes存在并发安全问题

driver.Valuer和sql.Scanner接口
使用场景: SQL默认支持的类型就是基础类型, []byte和string, 该如何自定义类型? 比如我要支持json类型, 我改如何处理?
driver.Valuer: 读取, 实现该接口的类型可以作为查询参数使用 (go类型到数据库类型)
sql.Scanner: 写入, 实现该接口的类型可以作为接收器用于Scan方法 (数据库类型到go类型)

事务隔离级别 - mysql
未读提交 READ UNCOMMITTED
已读提交 READ COMMITTED
可重复读 REPEATABLE READ -- mysql默认的级别
序列化 SERIALIZABLE

MySQl读异常
脏读: A事务能看到B事务未提交的修改 -- 隔离级别: 未提交读
不可重复读: A事务内同一个SQL读到了不同的数据 -- 隔离级别: 未提交读和已提交读
幻读: A事务内读到了B事务新插入的数据
    -- 隔离级别: 未提交读, 已提交读和可重复读. 注意InnoDB引擎的可重复读并不会引起幻读