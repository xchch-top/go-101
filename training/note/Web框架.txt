# Web框架

# Web框架概览

Web框架包含的组件 http://mc.xchch.top:6670/download/halo-blog/2209/Web框架包含的组件.png
常见的web框架有 gin, echo, beego, iris

面试题
web框架的功能: 处理Http请求, 为用户提供便捷API, 为用户提供无侵入式的插件机制, 提供如上传下载等默认功能
http包和web框架的区别: web框架提供高级路由功能, 封装http上下文以提供简单API, 封装Server以提供生命周期控制, 设计插件机制以提供无侵入式解决方案
Web框架的核心: 路由树, 上下文context, Server

## Web核心

对比常见的Web框架, 我们注意到对于一个Web框架来说, 至少要提供三个抽象
①代表服务器的抽象 Server ②代表上下文的抽象 Context ③路由树

Server从特性上来说, 至少要提供部分功能
①生命周期控制: 即启动, 关闭. 如果在后期, 我们还要考虑增加生命周期回调特性
②路由注册接口: 提供路由注册功能
③作为http包到web框架的桥梁

代码实现 web_v1     server定义
v0: 使用http.Handler
v1: 只组合http.Handler
v2: 组合http.Handler并且增加Start方法
v3: 将端口监听和服务器启动分离
v4: 注册路由api设计
代码实现 web_v2 支持静态路由查找
v0: 上一版本的最终代码
v1: 静态路由树构建
v2: 静态路由查找
v3: web服务集成静态路由功能
代码实现 web_v3 支持通配符匹配
v0: 上一版本的最终代码
v1: 通配符路由的注册和查找
代码实现 web_v4 支持参数路由
v0: 上一版本的最终代码
v1: 参数路由的注册和查找
v2: 取出路径参数路由的值

面试要点
Http服务器的生命周期: 一般来说就是启动, 运行和关闭. 在这三个阶段的前后都可以插入生命周期回调. 例如怎么做web服务的服务发现, 就是利用生命周期回调的启动后回调, 将web服务注册到服务中心
http server功能: 提供路由注册, 生命周期控制以及作为与http包结合的桥梁