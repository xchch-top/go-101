# ORM框架

## ORM框架概览

ORM: 对象-关系 映射
ORM框架是帮助用户完成对象到SQL, 以及结果集到对象的映射的工具
ORM框架的主要职责: 对象 -> SQL, 结果集 -> 对象

## select起步

mysql select语句规范 https://dev.mysql.com/doc/refman/8.0/en/select.html

代码实现 orm_v1
v0: query接口定义, from部分实现
v1: where部分实现

select面试题
gorm如何构造SQL? 在GORM里面主要有四个抽象: Builder, Expression, Clause和Interface. gorm的设计思路是SQL的不同部分分开构造, 最后再拼接在一起
什么是builder模式? builder模式尤其适合用于构造复杂多变的对象
orm框架使用泛型有什么优点? 用来约束用户传入的参数或者用户希望得到的返回值, 加强类型安全

## 元数据

模型: 一般是指对应到数据库表的GO结构体定义, 也被称为schema, table等

设计总结
    模型: 对应的表名, 索引, 主键, 关联关系
    列: 列名, Go类型, 数据库类型, 是否主键, 是否外键

代码实现 orm_v2
v0: 上一版本的最终代码
v1: 反射获取元数据的表名和列名
v2: 增加errs包, 使用model对select test进行重写
v3: 增加db和registry, 缓存parseModel的结果
v4: 解析columnTag, 自定义表名

设计要点
为什么使用reflect.Type作为map的key? 理论上有三种选择 结构体名字, 表名, reflect.Type, 最终reflect.Type是唯一的选择
registry实现: registry对外只提供get方法, parseModel只在registry内部使用
registry并发安全, 使用double-check的读写锁方法
对于orm来说, 用户应该操作字段名, 生成的sql中使用的是列名, 达到解耦的效果

自定义元数据的两种方式
基于标签 见代码v4
编程方式 RegisterModel, 编程方式自定义表名和列名 -- 不重要

元数据面试题
ORM框架是怎么将一个结构体映射为一张表的? 核心就是依赖元数据, 元数据描述了两者之间的映射关系
ORM的元数据有什么用? 在构造SQL的时候, 用来将SQL映射为表; 在处理结果集的时候, 用来将表映射为Go结构体
ORM元数据一般包含什么? 表信息, 列信息, 索引信息. 在支持关联查询的时候, 还包含表之间的关联关系
    ORM表信息包含什么? 主要就是表级别上的配置, 例如表名, 如果ORM本身支持分库分表, 那么还包含分库分表信息
    ORM列信息包含什么? 主要就是列名, 类型(和对应的GO类型), 索引, 是否主键, 以及关联关系
    ORM索引信息包含什么? 主要就是每一个索引的列, 以及是否唯一
ORM如何获得模型信息? 主要是利用反射来解析go类型, 同时可以利用tag, 或者暴露编程接口, 允许用户额外定制模型(例如指定表名)
Go字段上的Tag(标签)有什么用? 用来描述字段本身的额外信息, 例如使用json来指示转化json之后的字段名称, 或者如gorm使用tag来指定列的名字, 索引
gorm是如何实现的? 只要能回答构造SQL, 处理结果集, 元数据就可以了

## select结果集处理
代码实现 orm_v2
v0: 上一版本的最终代码
v1: Get方法实现